version: 2.1

executors:
  default:
    docker:
      - image: cimg/base:stable
    environment:
      GOOGLE_PROJECT_ID: "sylvan-hydra-464904-d9"

jobs:
  deploy:
    executor: default
    steps:
      - checkout

      - run:
          name: Install Google Cloud SDK
          command: |
            sudo apt update && sudo apt install -y curl apt-transport-https ca-certificates gnupg
            echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
            curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
            sudo apt update && sudo apt install -y google-cloud-sdk

      - run:
          name: Authenticate with Workload Identity Federation
          command: |
            gcloud auth login --brief --cred-file=<( \
              curl -s -H "Circle-Token: ${CIRCLE_TOKEN}" \
              "https://oidc.circleci.com/org/<your-org-id>/oidc-token" \
              | jq '{type:"external_account", audience:"<audience>", subject_token_type:"urn:ietf:params:oauth:token-type:jwt", token_url:"https://sts.googleapis.com/v1/token", credential_source:{file:"/dev/null"}, service_account_impersonation_url:"https://iamcredentials.googleapis.com/v1/projects/-/serviceAccounts/${GOOGLE_SERVICE_ACCOUNT_EMAIL}:generateAccessToken"}'
            )

      - run:
          name: Create VM if not exists and deploy app
          command: |
            if ! gcloud compute instances describe my-vm --zone asia-south1-c >/dev/null 2>&1; then
              echo "VM does not exist. Creating..."
              gcloud compute instances create my-vm \
                --zone asia-south1-c \
                --machine-type e2-medium \
                --tags http-server \
                --image-family debian-11 \
                --image-project debian-cloud \
                --metadata-from-file startup-script=startup-script.sh
            else
              echo "VM already exists. Skipping creation."
            fi

      - run:
          name: Open firewall for port 8080
          command: |
            if ! gcloud compute firewall-rules describe allow-8080 >/dev/null 2>&1; then
              gcloud compute firewall-rules create allow-8080 \
                --allow tcp:8080 \
                --target-tags http-server \
                --description="Allow port 8080 access"
            else
              echo "Firewall rule for port 8080 already exists."
            fi

      - run:
          name: Print VM External IP
          command: |
            EXTERNAL_IP=$(gcloud compute instances describe my-vm --zone asia-south1-c \
              --format='get(networkInterfaces[0].accessConfigs[0].natIP)')
            echo "Your application is deployed at http://$EXTERNAL_IP:8080"

workflows:
  deploy_workflow:
    jobs:
      - deploy
